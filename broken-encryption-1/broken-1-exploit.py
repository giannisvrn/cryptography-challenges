import socket
import string
import time

HOST = "195.134.67.7"
PORT = 10072

def send_msg(message): 
    with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
        s.connect((HOST,PORT))
        welcome_msg = s.recv(1024)
        
        s.sendall(f"encrypt\n".encode())
        #response = s.recv(1024).decode()
        response = s.recv(1024)
        #print(response)
        
        #s.sendall(f"{message}\n".encode())
        #response = s.recv(1024).decode()
        s.sendall(message.encode() + b"\n")
        response = s.recv(1024).strip()
        return response


def receive_msg(ciphertext):
    with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
        s.connect((HOST,PORT))
        welcome_msg = s.recv(1024)

        s.sendall(f"decrypt\n".encode())
        response = s.recv(1024)
        
        ciphertext_de = ciphertext.decode()
        s.sendall(f"{ciphertext_de}\n".encode())
        response = s.recv(1024).strip()
        return response

prefix = "signature="
known_flag = ""
possible_chars = string.digits + string.ascii_letters + string.punctuation

while True:
    best_guess = ""
    min_length = 2**30 - 1

    for byte_char in possible_chars:
        message = prefix + known_flag + byte_char
        
        print("message:",message)
        response = send_msg(message)
        #print(response)

        #new_resp = receive_msg(response)
        #print("new:",new_resp)
    
        length_cipher = len(response)
        print("length_cipher:",length_cipher)

        if length_cipher < min_length:
            min_length = length_cipher
            best_guess = byte_char

    known_flag += best_guess
    print("KNOWN FLAG:",known_flag)
    
    

